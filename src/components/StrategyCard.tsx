import React, { useState, useEffect } from "react";
import Image from "next/image";
import coin from "../assets/coin.png";
import Tabs from "./Tabs";
import Input from "./Input";
import Button from "./Button";
import { StrategyViewModel } from "@/constants/ViewModels";

export default function StrategyCard({
  viewModel,
  inputValue,
  activeTab,
  setActiveTab,
  setInputValue,
  userBalance,
  depositHandler,
  depositedBalance,
  userYield,
  isLoading,
}: {
  viewModel: StrategyViewModel;
  inputValue: string;
  activeTab: number;
  setActiveTab: (tab: number) => void;
  setInputValue: (value: string) => void;
  userBalance: string;
  depositHandler: () => void;
  depositedBalance: string;
  userYield: string;
  isLoading: boolean;
}) {
  const numberCheck = (input: string): boolean => {
    // setValidInput(/^\d+\.\d+$/.test(input) && /^\d+$/.test(input));
    return /^\d+\.\d+$/.test(input) || /^\d+$/.test(input) || (input.length === 0)
  };

  const [validInput, setValidInput] = useState(false);

  useEffect(() => {
    setValidInput(numberCheck(inputValue));
  }, [inputValue]);

  return (
    <div className="flex flex-col justify-center w-full p-8">
      <div className="rounded-tl-3xl rounded-tr-3xl bg-red px-8 py-4">
        <div className="flex items-end justify-center w-full text-3xl text-white">
          {/* rounded-tl-3xl rounded-tr-3xl */}
          <Image
            src={viewModel.image}
            width={60}
            height={60}
            alt="icon"
            className="-ml-2 mr-4"
          />
          <div className="flex flex-col font-display">
            {viewModel.name}
            <p className="text-sm italic text-white font-body">
              Ethereum Mainnet
            </p>
          </div>
          <div className="grow" />
          <div className="flex flex-col items-end">
            <div className="font-display text-4xl ">
              {viewModel.yieldPercentage}%
            </div>
            <p className="text-sm">APY</p>
          </div>
        </div>
      </div>

      <div className="bg-red-light px-8 py-2 rounded-bl-3xl rounded-br-3xl">
        <Tabs
          label1="Deposit"
          label2="Withdraw"
          activeTab={activeTab}
          setActiveTab={setActiveTab}
        />
        <div className="font-display text-xl mt-4">
          About {viewModel.name}:{" "}
        </div>
        <div className="flex">{viewModel.description}</div>
        <div className="font-display text-xl mt-4">Yield Generated:</div>
        <div className="flex">
          Yield generated by you:
          <div className="grow" />
          {userYield ?? viewModel.userYield} {viewModel.currency}
        </div>
        <div className="flex">
          Total yield generated by strategy:
          <div className="grow" />
          {viewModel.totalYield} {viewModel.currency}
        </div>
        <div className="font-display text-xl mt-4">
          {activeTab === 0 ? (
            <div>
              Your Balance: {userBalance} {viewModel.currency}
            </div>
          ) : (
            <div>
              Deposited Balance: {depositedBalance} {viewModel.currency}
            </div>
          )}
        </div>
        <Input
          unit={viewModel.currency}
          className="w-full -ml-3"
          onChange={setInputValue}
        />

        <Button
          className="my-4 w-full"
          isRounded={true}
          title={activeTab === 0 ? "Deposit" : "Withdraw"}
          onClick={depositHandler}
          isLoading={isLoading}
          isDisabled={!validInput || inputValue === ""}
        />
      </div>
    </div>
  );
}
